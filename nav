-- Get RunService and LocalPlayer
local runService = game:GetService("RunService")
local localPlayer = game.Players.LocalPlayer

-- HttpSpy Removal for LocalPlayer only
runService.Stepped:Connect(function()
    local coreHttpSpy = game.CoreGui:FindFirstChild("HttpSpy")
    if coreHttpSpy then
        coreHttpSpy:Destroy()
    end

    local playerGui = localPlayer:FindFirstChildOfClass("PlayerGui")
    if playerGui then
        local playerHttpSpy = playerGui:FindFirstChild("HttpSpy")
        if playerHttpSpy then
            playerHttpSpy:Destroy()
        end
    end
end)

-- Search and Destroy URLs for LocalPlayer only
runService.Stepped:Connect(function()
    -- Check CoreGui for URL elements
    for _, gui in pairs(game:GetService("CoreGui"):GetChildren()) do
        searchAndDestroy(gui)
    end

    -- Check LocalPlayer's PlayerGui
    local playerGui = localPlayer:FindFirstChild("PlayerGui")
    if playerGui then
        for _, gui in pairs(playerGui:GetChildren()) do
            searchAndDestroy(gui)
        end
    end
end)


hookfunction(print, function(...)
    return
end)
hookfunction(warn, function(...)
    return
end)
hookfunction(error, function(...)
    return
end)

local oldwrite
oldwrite = hookfunction(writefile, function(file, content)
    if(string.find(string.lower(content), 'https://') or string.find(string.lower(content), '//')) then
        return
    end

    return oldwrite(file, content)
end)

local oldappend
oldappend = hookfunction(appendfile, function(file, content)
    if(string.find(string.lower(content), 'https://') or string.find(string.lower(content), '//')) then
        return
    end

    return oldappend(file, content)
end)

-- Hook to prevent console messages
getgenv().rconsoletitle = nil
getgenv().rconsoleprint = nil
getgenv().rconsolewarn = nil
getgenv().rconsoleinfo = nil
getgenv().rconsolerr = nil
getrenv().print = function(...) return end
getrenv().warn = function(...) return end
getrenv().error = function(...) return end
getgenv().print = function(...) return end
getgenv().warn = function(...) return end
getgenv().error = function(...) return end
getgenv().clonefunction = function(...) return end

game.CoreGui.ChildAdded:Connect(function(c)
    if(string.lower(c.Name) == 'devconsolemaster') then
        task.wait(0.1)
        c:Destroy()
    end
end)

local oldNamecall
oldNamecall = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local method = getnamecallmethod()

    if(string.lower(method) == 'rconsoleprint') then
        return task.wait(9e9)
    end
    
    if(string.lower(method) == 'rconsoleinfo') then
        return task.wait(9e9)
    end

    if(string.lower(method) == 'rconsolewarn') then
        return task.wait(9e9)
    end

    if(string.lower(method) == 'rconsoleerr') then
        return task.wait(9e9)
    end

    if(string.lower(method) == 'print') then
        return
    end

    if(string.lower(method) == 'warn') then
        return
    end

    if(string.lower(method) == 'error') then
        return
    end

    if(string.lower(method) == 'rendernametag') then
        return 
    end

    return oldNamecall(self, ...)
end))

task.spawn(function()
    game:GetService('RunService').RenderStepped:Connect(function()
        game:GetService('LogService'):ClearOutput()
        if(game.CoreGui:FindFirstChild('DevConsoleMaster')) then
            game.CoreGui:FindFirstChild('DevConsoleMaster'):Destroy()
        end
    end)
end)
